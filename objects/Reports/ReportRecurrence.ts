

	/**
	 * Determines when and how often a report schedule runs automatically.
	 */
	export class ReportRecurrence {
		/**
		 * How often the report is automatically run.  Daily, weekly, monthly, etc...
		 */
		kind: ReportRecurrenceType;
		/**
		 * Used only for daily schedules, this 7 item, boolean array, determines if the schedule should recur on that day of the week.
		 *  <override count="7" />
		 */
		weekdays: boolean[] = [];
		/**
		 * Used only for weekly schedules, it's a number between 0 and 6 representing the day of the week, with Sunday being the first day of the week.
		 */
		weekday: byte = NaN;
		/**
		 * The local timezone used to calculate recurring date/time ranges.
		 * {@link Timezone.code}
		 * @deprecated Use owner.timezone instead
		 */
		timezone: Timezone;
		/**
		 * When the schedule is to begin recurring in local-time (not UTC).
		 */
		start: Date = DATE();
		/**
		 * The optional time when the schedule stops recurring in local-time (not UTC).
		 */
		end: Date = DATE();

		// keeping track of progress
		/**
		 * The number of times this schedule has been invoked to generate results.
		 *  <override readonly="true" />
		 */
		iterations: ushort = NaN;
		/**
		 * The unique identifier of the last ReportResult generated by this schedule.
		 *  <override readonly="true" />
		 */
		lastResult: ulong = NaN;
		/**
		 * This date/time is used as the startDate ReportParameter for the next iteration of this recurring report.
		 * This value is null when the schedule is calculated to stop recurring.
		 *  <override readonly="true" />
		 */
		nextStartDate: Date = DATE();
		/**
		 * This date/time is used as the endDate ReportParameter for the next iteration of this recurring report.
		 * This value is null when the schedule is calculated to stop recurring.
		 *  <override readonly="true" />
		 */
		nextEndDate: Date = DATE();
		/**
		 * The date/time stamp from the last result used to inform the nextStartDate and nextEndDate properties.
		 * This value is null when the schedule has not yet run once.
		 *  <override readonly="true" />
		 */
		lastStartDate: Date = DATE();
		/**
		 * The date/time stamp from the last result used to inform the nextStartDate and nextEndDate properties.
		 * This value is null when the schedule has not yet run once.
		 *  <override readonly="true" />
		 */
		lastEndDate: Date = DATE();
	}